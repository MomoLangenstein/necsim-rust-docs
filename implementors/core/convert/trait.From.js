(function() {var implementors = {};
implementors["necsim_core"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"necsim_core/lineage/struct.GlobalLineageReference.html\" title=\"struct necsim_core::lineage::GlobalLineageReference\">GlobalLineageReference</a>&gt;&gt; for <a class=\"enum\" href=\"necsim_core/event/enum.LineageInteraction.html\" title=\"enum necsim_core::event::LineageInteraction\">LineageInteraction</a>","synthetic":false,"types":["necsim_core::event::LineageInteraction"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"necsim_core/event/struct.SpeciationEvent.html\" title=\"struct necsim_core::event::SpeciationEvent\">SpeciationEvent</a>&gt; for <a class=\"struct\" href=\"necsim_core/event/struct.PackedEvent.html\" title=\"struct necsim_core::event::PackedEvent\">PackedEvent</a>","synthetic":false,"types":["necsim_core::event::PackedEvent"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"necsim_core/event/struct.DispersalEvent.html\" title=\"struct necsim_core::event::DispersalEvent\">DispersalEvent</a>&gt; for <a class=\"struct\" href=\"necsim_core/event/struct.PackedEvent.html\" title=\"struct necsim_core::event::PackedEvent\">PackedEvent</a>","synthetic":false,"types":["necsim_core::event::PackedEvent"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"necsim_core/event/enum.TypedEvent.html\" title=\"enum necsim_core::event::TypedEvent\">TypedEvent</a>&gt; for <a class=\"struct\" href=\"necsim_core/event/struct.PackedEvent.html\" title=\"struct necsim_core::event::PackedEvent\">PackedEvent</a>","synthetic":false,"types":["necsim_core::event::PackedEvent"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"necsim_core/event/struct.PackedEvent.html\" title=\"struct necsim_core::event::PackedEvent\">PackedEvent</a>&gt; for <a class=\"enum\" href=\"necsim_core/event/enum.TypedEvent.html\" title=\"enum necsim_core::event::TypedEvent\">TypedEvent</a>","synthetic":false,"types":["necsim_core::event::TypedEvent"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"necsim_core/landscape/location/struct.IndexedLocation.html\" title=\"struct necsim_core::landscape::location::IndexedLocation\">IndexedLocation</a>&gt; for <a class=\"struct\" href=\"necsim_core/landscape/location/struct.Location.html\" title=\"struct necsim_core::landscape::location::Location\">Location</a>","synthetic":false,"types":["necsim_core::landscape::location::Location"]},{"text":"impl&lt;R:&nbsp;<a class=\"trait\" href=\"necsim_core/reporter/trait.Reporter.html\" title=\"trait necsim_core::reporter::Reporter\">Reporter</a>, KeepSpeciation:&nbsp;<a class=\"trait\" href=\"necsim_core/reporter/boolean/trait.Boolean.html\" title=\"trait necsim_core::reporter::boolean::Boolean\">Boolean</a>, KeepDispersal:&nbsp;<a class=\"trait\" href=\"necsim_core/reporter/boolean/trait.Boolean.html\" title=\"trait necsim_core::reporter::boolean::Boolean\">Boolean</a>, KeepProgress:&nbsp;<a class=\"trait\" href=\"necsim_core/reporter/boolean/trait.Boolean.html\" title=\"trait necsim_core::reporter::boolean::Boolean\">Boolean</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;R&gt; for <a class=\"struct\" href=\"necsim_core/reporter/filter/struct.FilteredReporter.html\" title=\"struct necsim_core::reporter::filter::FilteredReporter\">FilteredReporter</a>&lt;R, KeepSpeciation, KeepDispersal, KeepProgress&gt;","synthetic":false,"types":["necsim_core::reporter::filter::FilteredReporter"]},{"text":"impl&lt;'a, T, B:&nbsp;<a class=\"trait\" href=\"necsim_core/reporter/boolean/trait.Boolean.html\" title=\"trait necsim_core::reporter::boolean::Boolean\">Boolean</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a </a>T&gt; for &amp;'a <a class=\"struct\" href=\"necsim_core/reporter/used/struct.MaybeUsed.html\" title=\"struct necsim_core::reporter::used::MaybeUsed\">MaybeUsed</a>&lt;T, B&gt;","synthetic":false,"types":["necsim_core::reporter::used::MaybeUsed"]},{"text":"impl&lt;T, B:&nbsp;<a class=\"trait\" href=\"necsim_core/reporter/boolean/trait.Boolean.html\" title=\"trait necsim_core::reporter::boolean::Boolean\">Boolean</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;T&gt; for <a class=\"struct\" href=\"necsim_core/reporter/used/struct.MaybeUsed.html\" title=\"struct necsim_core::reporter::used::MaybeUsed\">MaybeUsed</a>&lt;T, B&gt;","synthetic":false,"types":["necsim_core::reporter::used::MaybeUsed"]}];
implementors["necsim_core_bond"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"necsim_core_bond/positive_unit_f64/struct.PositiveUnitF64.html\" title=\"struct necsim_core_bond::positive_unit_f64::PositiveUnitF64\">PositiveUnitF64</a>&gt; for <a class=\"struct\" href=\"necsim_core_bond/closed_unit_f64/struct.ClosedUnitF64.html\" title=\"struct necsim_core_bond::closed_unit_f64::ClosedUnitF64\">ClosedUnitF64</a>","synthetic":false,"types":["necsim_core_bond::closed_unit_f64::ClosedUnitF64"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"necsim_core_bond/non_negative_f64/struct.NonNegativeF64.html\" title=\"struct necsim_core_bond::non_negative_f64::NonNegativeF64\">NonNegativeF64</a>","synthetic":false,"types":["necsim_core_bond::non_negative_f64::NonNegativeF64"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"necsim_core_bond/non_negative_f64/struct.NonNegativeF64.html\" title=\"struct necsim_core_bond::non_negative_f64::NonNegativeF64\">NonNegativeF64</a>","synthetic":false,"types":["necsim_core_bond::non_negative_f64::NonNegativeF64"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"necsim_core_bond/non_negative_f64/struct.NonNegativeF64.html\" title=\"struct necsim_core_bond::non_negative_f64::NonNegativeF64\">NonNegativeF64</a>","synthetic":false,"types":["necsim_core_bond::non_negative_f64::NonNegativeF64"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"necsim_core_bond/positive_f64/struct.PositiveF64.html\" title=\"struct necsim_core_bond::positive_f64::PositiveF64\">PositiveF64</a>&gt; for <a class=\"struct\" href=\"necsim_core_bond/non_negative_f64/struct.NonNegativeF64.html\" title=\"struct necsim_core_bond::non_negative_f64::NonNegativeF64\">NonNegativeF64</a>","synthetic":false,"types":["necsim_core_bond::non_negative_f64::NonNegativeF64"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"necsim_core_bond/closed_unit_f64/struct.ClosedUnitF64.html\" title=\"struct necsim_core_bond::closed_unit_f64::ClosedUnitF64\">ClosedUnitF64</a>&gt; for <a class=\"struct\" href=\"necsim_core_bond/non_negative_f64/struct.NonNegativeF64.html\" title=\"struct necsim_core_bond::non_negative_f64::NonNegativeF64\">NonNegativeF64</a>","synthetic":false,"types":["necsim_core_bond::non_negative_f64::NonNegativeF64"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZeroU32.html\" title=\"struct core::num::nonzero::NonZeroU32\">NonZeroU32</a>&gt; for <a class=\"struct\" href=\"necsim_core_bond/positive_f64/struct.PositiveF64.html\" title=\"struct necsim_core_bond::positive_f64::PositiveF64\">PositiveF64</a>","synthetic":false,"types":["necsim_core_bond::positive_f64::PositiveF64"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZeroU64.html\" title=\"struct core::num::nonzero::NonZeroU64\">NonZeroU64</a>&gt; for <a class=\"struct\" href=\"necsim_core_bond/positive_f64/struct.PositiveF64.html\" title=\"struct necsim_core_bond::positive_f64::PositiveF64\">PositiveF64</a>","synthetic":false,"types":["necsim_core_bond::positive_f64::PositiveF64"]}];
implementors["necsim_impls_cuda"] = [{"text":"impl&lt;R:&nbsp;<a class=\"trait\" href=\"necsim_core/cogs/rng/trait.RngCore.html\" title=\"trait necsim_core::cogs::rng::RngCore\">RngCore</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;R&gt; for <a class=\"struct\" href=\"necsim_impls_cuda/cogs/rng/struct.CudaRng.html\" title=\"struct necsim_impls_cuda::cogs::rng::CudaRng\">CudaRng</a>&lt;R&gt;","synthetic":false,"types":["necsim_impls_cuda::cogs::rng::CudaRng"]}];
implementors["necsim_impls_no_std"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"necsim_impls_no_std/cogs/lineage_reference/in_memory/struct.InMemoryLineageReference.html\" title=\"struct necsim_impls_no_std::cogs::lineage_reference::in_memory::InMemoryLineageReference\">InMemoryLineageReference</a>","synthetic":false,"types":["necsim_impls_no_std::cogs::lineage_reference::in_memory::InMemoryLineageReference"]}];
implementors["necsim_impls_std"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"necsim_core_bond/non_negative_f64/struct.NonNegativeF64.html\" title=\"struct necsim_core_bond::non_negative_f64::NonNegativeF64\">NonNegativeF64</a>&gt; for <a class=\"struct\" href=\"necsim_impls_std/cogs/active_lineage_sampler/gillespie/event_time/struct.EventTime.html\" title=\"struct necsim_impls_std::cogs::active_lineage_sampler::gillespie::event_time::EventTime\">EventTime</a>","synthetic":false,"types":["necsim_impls_std::cogs::active_lineage_sampler::gillespie::event_time::EventTime"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"necsim_core_bond/positive_f64/struct.PositiveF64.html\" title=\"struct necsim_core_bond::positive_f64::PositiveF64\">PositiveF64</a>&gt; for <a class=\"struct\" href=\"necsim_impls_std/cogs/active_lineage_sampler/gillespie/event_time/struct.EventTime.html\" title=\"struct necsim_impls_std::cogs::active_lineage_sampler::gillespie::event_time::EventTime\">EventTime</a>","synthetic":false,"types":["necsim_impls_std::cogs::active_lineage_sampler::gillespie::event_time::EventTime"]}];
implementors["necsim_plugins_core"] = [{"text":"impl&lt;R:&nbsp;<a class=\"trait\" href=\"necsim_core/reporter/trait.Reporter.html\" title=\"trait necsim_core::reporter::Reporter\">Reporter</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;R&gt; for <a class=\"struct\" href=\"necsim_plugins_core/export/struct.UnsafeReporterPlugin.html\" title=\"struct necsim_plugins_core::export::UnsafeReporterPlugin\">UnsafeReporterPlugin</a>","synthetic":false,"types":["necsim_plugins_core::export::UnsafeReporterPlugin"]}];
implementors["necsim_plugins_metacommunity"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"necsim_plugins_metacommunity/struct.MetacommunityMigrationReporterArgs.html\" title=\"struct necsim_plugins_metacommunity::MetacommunityMigrationReporterArgs\">MetacommunityMigrationReporterArgs</a>&gt; for <a class=\"struct\" href=\"necsim_plugins_metacommunity/struct.MetacommunityMigrationReporter.html\" title=\"struct necsim_plugins_metacommunity::MetacommunityMigrationReporter\">MetacommunityMigrationReporter</a>","synthetic":false,"types":["necsim_plugins_metacommunity::MetacommunityMigrationReporter"]}];
implementors["ptx_builder"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"ptx_builder/error/enum.BuildErrorKind.html\" title=\"enum ptx_builder::error::BuildErrorKind\">BuildErrorKind</a>&gt; for <a class=\"struct\" href=\"ptx_builder/error/struct.Error.html\" title=\"struct ptx_builder::error::Error\">Error</a>","synthetic":false,"types":["ptx_builder::error::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Context&lt;<a class=\"enum\" href=\"ptx_builder/error/enum.BuildErrorKind.html\" title=\"enum ptx_builder::error::BuildErrorKind\">BuildErrorKind</a>&gt;&gt; for <a class=\"struct\" href=\"ptx_builder/error/struct.Error.html\" title=\"struct ptx_builder::error::Error\">Error</a>","synthetic":false,"types":["ptx_builder::error::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Context&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;&gt; for <a class=\"struct\" href=\"ptx_builder/error/struct.Error.html\" title=\"struct ptx_builder::error::Error\">Error</a>","synthetic":false,"types":["ptx_builder::error::Error"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Context&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;&gt; for <a class=\"struct\" href=\"ptx_builder/error/struct.Error.html\" title=\"struct ptx_builder::error::Error\">Error</a>","synthetic":false,"types":["ptx_builder::error::Error"]}];
implementors["ron"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/str/error/struct.Utf8Error.html\" title=\"struct core::str::error::Utf8Error\">Utf8Error</a>&gt; for <a class=\"enum\" href=\"ron/error/enum.ErrorCode.html\" title=\"enum ron::error::ErrorCode\">ErrorCode</a>","synthetic":false,"types":["ron::error::ErrorCode"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.FromUtf8Error.html\" title=\"struct alloc::string::FromUtf8Error\">FromUtf8Error</a>&gt; for <a class=\"enum\" href=\"ron/error/enum.ErrorCode.html\" title=\"enum ron::error::ErrorCode\">ErrorCode</a>","synthetic":false,"types":["ron::error::ErrorCode"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/str/error/struct.Utf8Error.html\" title=\"struct core::str::error::Utf8Error\">Utf8Error</a>&gt; for <a class=\"struct\" href=\"ron/error/struct.Error.html\" title=\"struct ron::error::Error\">Error</a>","synthetic":false,"types":["ron::error::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt; for <a class=\"struct\" href=\"ron/error/struct.Error.html\" title=\"struct ron::error::Error\">Error</a>","synthetic":false,"types":["ron::error::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>&gt; for <a class=\"enum\" href=\"ron/value/enum.Number.html\" title=\"enum ron::value::Number\">Number</a>","synthetic":false,"types":["ron::value::Number"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>&gt; for <a class=\"enum\" href=\"ron/value/enum.Number.html\" title=\"enum ron::value::Number\">Number</a>","synthetic":false,"types":["ron::value::Number"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"enum\" href=\"ron/value/enum.Number.html\" title=\"enum ron::value::Number\">Number</a>","synthetic":false,"types":["ron::value::Number"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt; for <a class=\"enum\" href=\"ron/value/enum.Number.html\" title=\"enum ron::value::Number\">Number</a>","synthetic":false,"types":["ron::value::Number"]}];
implementors["rust_cuda"] = [{"text":"impl&lt;C:&nbsp;<a class=\"trait\" href=\"rust_cuda/host/private/drop/trait.Sealed.html\" title=\"trait rust_cuda::host::private::drop::Sealed\">Sealed</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;C&gt; for <a class=\"struct\" href=\"rust_cuda/host/struct.CudaDropWrapper.html\" title=\"struct rust_cuda::host::CudaDropWrapper\">CudaDropWrapper</a>&lt;C&gt;","synthetic":false,"types":["rust_cuda::host::CudaDropWrapper"]}];
implementors["rustacuda"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"rustacuda/function/struct.GridSize.html\" title=\"struct rustacuda::function::GridSize\">GridSize</a>","synthetic":false,"types":["rustacuda::function::GridSize"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"rustacuda/function/struct.GridSize.html\" title=\"struct rustacuda::function::GridSize\">GridSize</a>","synthetic":false,"types":["rustacuda::function::GridSize"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"rustacuda/function/struct.GridSize.html\" title=\"struct rustacuda::function::GridSize\">GridSize</a>","synthetic":false,"types":["rustacuda::function::GridSize"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"struct\" href=\"rustacuda/function/struct.GridSize.html\" title=\"struct rustacuda::function::GridSize\">GridSize</a>&gt; for <a class=\"struct\" href=\"rustacuda/function/struct.GridSize.html\" title=\"struct rustacuda::function::GridSize\">GridSize</a>","synthetic":false,"types":["rustacuda::function::GridSize"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"rustacuda/function/struct.BlockSize.html\" title=\"struct rustacuda::function::BlockSize\">BlockSize</a>","synthetic":false,"types":["rustacuda::function::BlockSize"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"rustacuda/function/struct.BlockSize.html\" title=\"struct rustacuda::function::BlockSize\">BlockSize</a>","synthetic":false,"types":["rustacuda::function::BlockSize"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"rustacuda/function/struct.BlockSize.html\" title=\"struct rustacuda::function::BlockSize\">BlockSize</a>","synthetic":false,"types":["rustacuda::function::BlockSize"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"struct\" href=\"rustacuda/function/struct.BlockSize.html\" title=\"struct rustacuda::function::BlockSize\">BlockSize</a>&gt; for <a class=\"struct\" href=\"rustacuda/function/struct.BlockSize.html\" title=\"struct rustacuda::function::BlockSize\">BlockSize</a>","synthetic":false,"types":["rustacuda::function::BlockSize"]}];
implementors["rustcoalescence"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"rustcoalescence/args/enum.ScenarioRaw.html\" title=\"enum rustcoalescence::args::ScenarioRaw\">ScenarioRaw</a>&gt; for <a class=\"enum\" href=\"rustcoalescence/args/enum.Scenario.html\" title=\"enum rustcoalescence::args::Scenario\">Scenario</a>","synthetic":false,"types":["rustcoalescence::args::Scenario"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()